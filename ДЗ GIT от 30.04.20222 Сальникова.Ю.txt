GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON.
 5. Клонировать репозиторий JSON на локальный компьютер.

git clone https://github.com/JullSal/JSON.git


 6. Внутри локального JSON создать файл “new.json”.

vim new.json
i
esc
:wq

 7. Добавить файл под гит.

git add .

 8. Закоммитить файл.

git commit -m "Add a new file"

 9. Отправить файл на внешний GitHub репозиторий.

git push,

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.

vim new.json
i
{
        "firstName" : "Julia",
        "secondName" : "Salnikova",
        "age" : "27",
        "pets" : "no" ,
        "salary" : "400$"
}
esc
:wq

 11. Отправить изменения на внешний репозиторий.

git commit -am "Update new.json"
git push

 12. Создать файл preferences.json

touch preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.

vim preferences.json
i
{
        "faworit film" : "Midnight in Paris",
        "faworit series" : "Scrubs",
        "faworit food" : "fresh bread with latte",
        "faworit season" : "summer",
        "country" : "Spain"
}
esc
:wq

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON

vim sklls.json
i
{
        "skill_1" : "git_bash" ,
        "skill_2" : "java_script" ,
        "skill_3" : "postman",
        "skill_4" : "SQL"
}
esc
:wq

 15. Отправить сразу 2 файла на внешний репозиторий.

 git add . | git commit -m "create two new files" | git push

 16. На веб интерфейсе создать файл bug_report.json.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

git pull

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 20. Синхронизировать внешний и локальный репозиторий JSON

git pull
git push

XML
 21. Создать внешний репозиторий c названием XML.
 22. Клонировать репозиторий XML на локальный компьютер.

 git clone https://github.com/JullSal/XML.git

 23. Внутри локального XML создать файл “new.xml”.

cd XML
touch new.xml

 24. Добавить файл под гит.

 git add new.xml

 25. Закоммитить файл.

git commit -m "Create new file"

 26. Отправить файл на внешний GitHub репозиторий.

git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.

vim new.xml
i
<xml>
	<firstName>Julia</firstName>
        <secondName>Salnikova</secondName>
        <age>27</age>
        <pets>no</pets>
        <salary>400$</salary>
esc
:wq

 28. Отправить изменения на внешний репозиторий.

git commit -am "update file new.xml"
git push

 29. Создать файл preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.

vim preferences.xml
i
<xml>	
	<favorit_film>Midnight_in_Paris"</favorit_film>
        <favorit_series>Scrubs</favorit_series>
        <favorit_food>fresh_bread_with_latte</favorit_food>
        <favorit_season>summer</favorit_season>
        <country>Spain</country>
esc
:wq

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML

vim sklls.xml
i
<xml>	
	<skill_1>git_bash</skill_1>
	<skill_2>java_script</skill_2>
	<skill_3>postman</skill_3>
	<skill_4>SQL</skill_4>
esc
:wq

 32. Сделать коммит в одну строку.

git add . | git commit -m "Create two new files"

 33. Отправить сразу 2 файла на внешний репозиторий.

git push

 34. На веб интерфейсе создать файл bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML

git pull
git push

TXT
 1. Создать внешний репозиторий c названием TXT.
 2. Клонировать репозиторий TXT на локальный компьютер.

git clone https://github.com/JullSal/TXT.git

 3. Внутри локального TXT создать файл “new.txt”.

touch new.txt

 4. Добавить файл под гит.

gir add .

 5. Закоммитить файл.

git commit -m "Create new file"

 6. Отправить файл на внешний GitHub репозиторий.

git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.

vim new.txt
i
	first Name - Julia
        second Name - Salnikova
        age - 27
        pets - no
        salary - 400$
esc
:wq

8. Отправить изменения на внешний репозиторий.

git commit -am "update new.txt" | git push

 9. Создать файл preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
 
vim preferences.txt
i
	favorit_film - Midnight_in_Paris"
        favorit_series - Scrubs
        favorit_food - fresh_bread_with_latte
        favorit_season - summer
        country - Spain
esc
:wq

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT

vim skills.txt
i
	skill_1 - git_bash
	skill_2 - java_script
	skill_3 - postman
	skill_4 - SQL
esc
:wq

 12. Сделать коммит в одну строку.

git add . | git commit -m "Create two new files"

 13. Отправить сразу 2 файла на внешний репозиторий.

git push

 14. На веб интерфейсе создать файл bug_report.txt.
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. Синхронизировать внешний и локальный репозиторий TXT
git pull
git push